"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.1, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African American", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.05, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African American", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.04, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African American", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.03, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African American", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.04, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African American", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.04, 0.02),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African American", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.04, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African\nAmerican", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1.04, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
us <- map_data('state')
ggplot(us, aes(long, lat)) +
geom_map(map=us, aes(map_id=region), fill="grey97", color="grey") +
geom_scatterpie(data = largest,
aes(lon, lat, r = sqrt(total)/2000),
cols = c("white", "black", "asian", "others"),
alpha = 0.5) +
scale_fill_manual(
breaks = c("white", "black", "asian", "others"),
labels = c("White", "Black or African\nAmerican", "Asian", "Others"),
values = c("asian" = "orange",
"white" = "white",
"black" = "black",
"others" = "cyan")
) +
labs(title = "Races in Metro Areas With a Population of Over a Million",
subtitle = "Others includes American Indian and Alaska Native, Native Hawaiian and Other Pacific Islander,\nand mixed races.",
caption = "Source: 2019 American Community Survey Single-Year Estimates",
fill = NULL) +
coord_fixed() +
theme_bw() +
theme(legend.position = c(1, 0.02),
legend.justification = c(1, 0),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
devtools::load_all()
roxygen2::roxygenise()
devtools::load_all()
devtools::document()
devtools::build_manual()
devtools::build()
devtools::build()
devtools::check()
roxygen2::roxygenise()
devtools::load_all()
devtools::build()
roxygen2::roxygenise()
devtools::build()
devtools::build()
devtools::build()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all()
devtools::document()
devtools::build()
devtools::build_vignettes()
pop = system.file("extdata", "population.shp",
package="sandwichr")
pop.dists <- as.matrix(dist(cbind(pop.data[[1]]$lon, pop.data[[1]]$lat)))
pop.dists.inv <- 1/pop.dists
diag(pop.dists.inv) <- 0
Moran.I(pop.data[[1]]$Value, pop.dists.inv)
pop.dists <- as.matrix(dist(cbind(pop[[1]]$lon, pop[[1]]$lat)))
pop = system.file("extdata", "population.shp",
+                   package="sandwichr")
sampling.file = "population.shp"
sampling.lyr = read_sf(dsn=dirname(sampling.file),
layer=file_path_sans_ext(basename(sampling.file)))
import sf
library(sf)
sampling.lyr = read_sf(dsn=dirname(sampling.file),
+                        layer=file_path_sans_ext(basename(sampling.file)))
sampling.lyr = read_sf(dsn=dirname(sampling.file),layer=file_path_sans_ext(basename(sampling.file)))
library(tools)
sampling.lyr = read_sf(dsn=dirname(sampling.file),layer=file_path_sans_ext(basename(sampling.file)))
hs.dists <- as.matrix(dist(cbind(sampling.lyr$lon, sampling.lyr$lat)))
hs.dists.inv <- 1/hs.dists
diag(hs.dists.inv) <- 0
Moran.I(sampling.lyr$Value, hs.dists.inv)
library(ape)
Moran.I(sampling.lyr$Value, hs.dists.inv)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE, fig.cap = " ", fig.path='figs/')
# Import the sandwichr package and other packages
library("sandwichr")
library(ggplot2)
library(ggpubr)
library(dplyr)
library(ape)
# Input data from shapefiles
hs.sampling.name <- system.file("extdata", "sim.sampling.shp",
package="sandwichr")
hs.ssh.name <- system.file("extdata", "sim.ssh.shp",
package="sandwichr")
hs.reporting.name <- system.file("extdata", "sim.reporting.shp",
package="sandwichr")
hs.data <- load.data.shp(sampling.file=hs.sampling.name,
ssh.file=hs.ssh.name,
reporting.file=hs.reporting.name)
# Sampling
head(hs.data[[1]])
class(hs.data[[1]])
attributes(hs.data[[1]])
# SSH
head(hs.data[[2]])
class(hs.data[[2]])
attributes(hs.data[[2]])
# Reporting
head(hs.data[[3]])
class(hs.data[[3]])
attributes(hs.data[[3]])
devtools::load_all()
hs.sampling.name <- system.file("extdata", "sim.sampling.shp",
package="sandwichr")
hs.ssh.name <- system.file("extdata", "sim.ssh.shp",
package="sandwichr")
hs.reporting.name <- system.file("extdata", "sim.reporting.shp",
package="sandwichr")
hs.data <- load.data.shp(sampling.file=hs.sampling.name,
ssh.file=hs.ssh.name,
reporting.file=hs.reporting.name)
# Sampling
head(hs.data[[1]])
class(hs.data[[1]])
attributes(hs.data[[1]])
# SSH
head(hs.data[[2]])
class(hs.data[[2]])
attributes(hs.data[[2]])
# Reporting
head(hs.data[[3]])
class(hs.data[[3]])
attributes(hs.data[[3]])
devtools::load_all()
sim.sampling.name <- system.file("extdata", "sim.sampling.shp",
package="sandwichr")
sim.ssh.name <- system.file("extdata", "sim.ssh.shp",
package="sandwichr")
sim.reporting.name <- system.file("extdata", "sim.reporting.shp",
package="sandwichr")
sim.data <- load.data.shp(sampling.file=hs.sampling.name,
ssh.file=hs.ssh.name,
reporting.file=hs.reporting.name)
sim.dists <- as.matrix(dist(cbind(sim.data[[1]]$Lon, sim.data[[1]]$Lat)))
sim.dists.inv <- 1/sim.dists
diag(sim.dists.inv) <- 0
Moran.I(sim.data[[1]]$Value, sim.dists.inv)
sim.join <- ssh.data.shp(object=sim.data)
head(sim.join)
sim.join <- ssh.data.shp(object=sim.data[[1]], ssh.lyr=sim.data[[2]], ssh.id="STR")
head(sim.join)
sim.join <- ssh.data.shp(object=sim.data[[1]], ssh.lyr=sim.data[[2]], ssh.id="X")
head(sim.join)
ssh.test(object=sim.join, y="Value", x=c("X"), test="factor")
sim.sw <- sandwich.model(object=sim.data, sampling.attr="Value", type="shp")
head(sim.sw$object)
summary(sim.sw)
ggplot2::autoplot(object=sim.sw)
View(sim.join)
ggplot(data=sim.data[[3]]) + geom_sf(fill = "antiquewhite1")
sim.sw <- sandwich.model(object=sim.data, sampling.attr="Value", type="shp")
head(sim.sw$object)
sim.sw$object
ggplot2::autoplot(object=sim.sw)
qqnorm(sim.data[[1]]$Value, pch=1, frame=FALSE)
qqline(sim.data[[1]]$Value, col="steelblue", lwd=2)
set.seed(0)
sim.cv <- sandwich.cv(object=sim.data, sampling.attr="Value", k=5, type="shp", ssh.id.col="X")
sim.cv
save(sim.data, file="sim.data.RData")
roxygen2::roxygenise()
devtools::load_all()
devtools::document()
devtools::build()
devtools::build()
devtools::build_vignettes()
roxygen2::roxygenise()
devtools::load_all()
devtools::document()
devtools::build()
devtools::build()
devtools::build_vignettes()
devtools::build_vignettes()
p = ggerrorplot(sim.data[[1]], x = "X", y = "Value",
desc_stat = "mean_sd", color = "black",
add = "violin", add.params = list(color = "darkgray")
)
p + theme(axis.title.x = element_blank())
sim.data[[1]] %>%
group_by(X) %>%
summarise_at(vars(Value),
list(name = mean))
sim.data[[1]] %>%
group_by(X) %>%
summarise(mean=mean(Value), sd=sd(Value), n=n())
library(ggplot2)
library(ggpubr)
library(dplyr)
library(ape)
sim.sampling.name <- system.file("extdata", "sim.sampling.shp",
package="sandwichr")
sim.ssh.name <- system.file("extdata", "sim.ssh.shp",
package="sandwichr")
sim.reporting.name <- system.file("extdata", "sim.reporting.shp",
package="sandwichr")
sim.data <- load.data.shp(sampling.file=sim.sampling.name,
ssh.file=sim.ssh.name,
reporting.file=sim.reporting.name)
p = ggerrorplot(sim.data[[1]], x = "X", y = "Value",
desc_stat = "mean_sd", color = "black",
add = "violin", add.params = list(color = "darkgray")
)
p + theme(axis.title.x = element_blank())
sim.data[[1]] %>%
group_by(X) %>%
summarise_at(vars(Value),
list(name = mean))
sim.data[[1]] %>%
group_by(X) %>%
summarise(mean=mean(Value), sd=sd(Value), n=n())
sim.join <- ssh.data.shp(object=sim.data[[1]], ssh.lyr=sim.data[[2]], ssh.id="X")
head(sim.join)
p = ggerrorplot(sim.join[[1]], x = "X", y = "Value",
desc_stat = "mean_sd", color = "black",
add = "violin", add.params = list(color = "darkgray")
)
p = ggerrorplot(sim.join, x = "X", y = "Value",
desc_stat = "mean_sd", color = "black",
add = "violin", add.params = list(color = "darkgray")
)
p + theme(axis.title.x = element_blank())
sim.join %>%
group_by(X) %>%
summarise_at(vars(Value),
list(name = mean))
sim.join %>%
group_by(X) %>%
summarise(mean=mean(Value), sd=sd(Value), n=n())
sim.sw <- sandwich.model(object=sim.data, sampling.attr="Value", type="shp")
head(sim.sw$object)
summary(sim.sw)
sf::st_write(obj = sim.sw, dsn = "sim.sw.shp")
View(sim.sw)
sim.sw$object
sf::st_write(obj = sim.sw$object, dsn = "sim.sw.shp")
devtools::build()
roxygen2::roxygenise()
devtools::load_all()
devtools::document()
devtools::build()
devtools::build()
devtools::build_vignettes()
devtools::load_all()
library(ggplot2)
library(ggpubr)
library(dplyr)
library(ape)
sim.sampling.name <- system.file("extdata", "sim.sampling.shp",
package="sandwichr")
sim.ssh.name <- system.file("extdata", "sim.ssh.shp",
package="sandwichr")
sim.reporting.name <- system.file("extdata", "sim.reporting.shp",
package="sandwichr")
sim.data <- load.data.shp(sampling.file=sim.sampling.name,
ssh.file=sim.ssh.name,
reporting.file=sim.reporting.name)
sim.sw <- sandwich.model(object=sim.data, sampling.attr="Value", type="shp")
save(sim.data, file="data/sim.data.RData", compress="xz")
sf::st_write(obj = sim.data, dsn = "sim.data.shp")
sf::st_write(obj = sim.data$object, dsn = "sim.data.shp")
sf::st_write(obj = sim.sw$object, dsn = "sim.data.shp")
sf::st_write(obj = sim.sw$object, dsn = "sim.sw.shp")
devtools::load_all()
devtools::load_all()
library(ggplot2)
library(ggpubr)
library(dplyr)
library(ape)
sim.sampling.name <- system.file("extdata", "sim.sampling.shp",
package="sandwichr")
sim.ssh.name <- system.file("extdata", "sim.ssh.shp",
package="sandwichr")
sim.reporting.name <- system.file("extdata", "sim.reporting.shp",
package="sandwichr")
sim.data <- load.data.shp(sampling.file=sim.sampling.name,
ssh.file=sim.ssh.name,
reporting.file=sim.reporting.name)
sim.join <- ssh.data.shp(object=sim.data[[1]], ssh.lyr=sim.data[[2]], ssh.id="X")
p = ggerrorplot(sim.join, x = "X", y = "Value",
desc_stat = "mean_sd", color = "black",
add = "violin", add.params = list(color = "darkgray")
)
p + theme(axis.title.x = element_blank())
sim.join %>%
group_by(X) %>%
summarise_at(vars(Value),
list(name = mean))
sim.join %>%
group_by(X) %>%
summarise(mean=mean(Value), sd=sd(Value), n=n())
roxygen2::roxygenise()
devtools::load_all()
devtools::document()
devtools::build()
devtools::build_vignettes()
devtools::load_all()
devtools::document()
devtools::build()
devtools::check()
devtools::release()
